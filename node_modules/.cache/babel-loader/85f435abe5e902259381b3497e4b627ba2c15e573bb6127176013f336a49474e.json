{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\Desktop\\\\Shopping Cart\\\\src\\\\components\\\\Product.jsx\",\n  _s = $RefreshSig$();\n// import toast from \"react-hot-toast\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { add, remove } from \"../redux/Slices/CartSlice\"\n\n// const Product = ({post}) => {\n\n//   const {cart} = useSelector((state) => state.Cart);\n//   const dispacth = useDispatch();\n\n//   const addtocart =() => {\n//     dispacth(add(post));\n//     toast.success(\"Item added To Cart\");\n//   }\n\n//   const removefromcart = () =>{\n//     dispacth(remove(post.id));\n//     toast.success(\"Item removed To Cart\");\n//   }\n\n//   return (\n//     <div>\n//        <div>\n//         <p>{post.title}</p>\n//        </div>\n//        <div>\n//         <p>{post.description}</p>\n//        </div>\n//        <div>\n//         <img src={post.image}\n//           alt=\"\"\n//         />\n//        </div>\n//        <div>\n//         <p>{post.price}</p>\n//        </div>\n//        <button>\n//         {\n//           cart.some((p) => p.id === post.id) ?\n//           (<button onClick={removefromcart}>\n//             Remove Item\n//           </button>) :\n//           (\n//             <button onClick={addtocart}>\n//               Add To Cart\n//             </button>\n//           )\n//         }\n//        </button>\n//     </div>\n//   );\n// };\n\n// export default Product;\n\nimport toast from \"react-hot-toast\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { add, remove } from \"../redux/Slices/CartSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Product = ({\n  post\n}) => {\n  _s();\n  const {\n    cart\n  } = useSelector(state => state.Cart); // Make sure to match the slice name\n  const dispatch = useDispatch();\n  const addtocart = () => {\n    if (!post || !post.id) {\n      console.error(\"Invalid post object or post.id is missing\");\n      return;\n    }\n    dispatch(add(post));\n    toast.success(\"Item added To Cart\");\n  };\n  const removefromcart = () => {\n    if (!post || !post.id) {\n      console.error(\"Invalid post object or post.id is missing\");\n      return;\n    }\n    dispatch(remove(post.id)); // Assuming `post.id` uniquely identifies the item\n    toast.success(\"Item removed To Cart\");\n  };\n  console.log(\"Cart State:\", cart); // Debugging statement to check cart state\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: post && post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: post && post.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: post && post.image,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: post && post.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: cart.some(p => p.id === (post === null || post === void 0 ? void 0 : post.id)) ?\n      /*#__PURE__*/\n      // Use optional chaining for post.id\n      _jsxDEV(\"button\", {\n        onClick: removefromcart,\n        children: \"Remove Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addtocart,\n        children: \"Add To Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Product, \"2Uk6fFZ91Mc7Y8ypsgiP11a+U3g=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Product;\nexport default Product;\nvar _c;\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["toast","useDispatch","useSelector","add","remove","jsxDEV","_jsxDEV","Product","post","_s","cart","state","Cart","dispatch","addtocart","id","console","error","success","removefromcart","log","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","src","image","alt","price","some","p","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dhruv/Desktop/Shopping Cart/src/components/Product.jsx"],"sourcesContent":["// import toast from \"react-hot-toast\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { add, remove } from \"../redux/Slices/CartSlice\"\r\n\r\n// const Product = ({post}) => {\r\n   \r\n//   const {cart} = useSelector((state) => state.Cart);\r\n//   const dispacth = useDispatch();\r\n\r\n//   const addtocart =() => {\r\n//     dispacth(add(post));\r\n//     toast.success(\"Item added To Cart\");\r\n//   }\r\n\r\n//   const removefromcart = () =>{\r\n//     dispacth(remove(post.id));\r\n//     toast.success(\"Item removed To Cart\");\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//        <div>\r\n//         <p>{post.title}</p>\r\n//        </div>\r\n//        <div>\r\n//         <p>{post.description}</p>\r\n//        </div>\r\n//        <div>\r\n//         <img src={post.image}\r\n//           alt=\"\"\r\n//         />\r\n//        </div>\r\n//        <div>\r\n//         <p>{post.price}</p>\r\n//        </div>\r\n//        <button>\r\n//         {\r\n//           cart.some((p) => p.id === post.id) ?\r\n//           (<button onClick={removefromcart}>\r\n//             Remove Item\r\n//           </button>) :\r\n//           (\r\n//             <button onClick={addtocart}>\r\n//               Add To Cart\r\n//             </button>\r\n//           )\r\n//         }\r\n//        </button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Product;\r\n\r\nimport toast from \"react-hot-toast\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { add, remove } from \"../redux/Slices/CartSlice\";\r\n\r\nconst Product = ({ post }) => {\r\n  const { cart } = useSelector((state) => state.Cart); // Make sure to match the slice name\r\n  const dispatch = useDispatch();\r\n\r\n  const addtocart = () => {\r\n    if (!post || !post.id) {\r\n      console.error(\"Invalid post object or post.id is missing\");\r\n      return;\r\n    }\r\n    dispatch(add(post));\r\n    toast.success(\"Item added To Cart\");\r\n  };\r\n\r\n  const removefromcart = () => {\r\n    if (!post || !post.id) {\r\n      console.error(\"Invalid post object or post.id is missing\");\r\n      return;\r\n    }\r\n    dispatch(remove(post.id)); // Assuming `post.id` uniquely identifies the item\r\n    toast.success(\"Item removed To Cart\");\r\n  };\r\n\r\n  console.log(\"Cart State:\", cart); // Debugging statement to check cart state\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <p>{post && post.title}</p> {/* Add null check for post object */}\r\n      </div>\r\n      <div>\r\n        <p>{post && post.description}</p> {/* Add null check for post object */}\r\n      </div>\r\n      <div>\r\n        <img src={post && post.image} alt=\"\" /> {/* Add null check for post object */}\r\n      </div>\r\n      <div>\r\n        <p>{post && post.price}</p> {/* Add null check for post object */}\r\n      </div>\r\n      <button>\r\n        {cart.some((p) => p.id === post?.id) ? ( // Use optional chaining for post.id\r\n          <button onClick={removefromcart}>Remove Item</button>\r\n        ) : (\r\n          <button onClick={addtocart}>Add To Cart</button>\r\n        )}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}